openapi: 3.0.3
info:
  title: Customer booking service API
  version: 1.0.0
  description: API for managing customer bookings

paths:
  /api/customer/all:
    get:
      summary: Get all customers
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerDto'

  /api/customer/get:
    get:
      summary: Get a customer by ID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Customer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
        '404':
          description: Customer not found

  /api/customer/create:
    post:
      summary: Create a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerDto'
      responses:
        '201':
          description: Customer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'

  /api/customer/update:
    put:
      summary: Update a customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerDto'
      responses:
        '200':
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
        '404':
          description: Customer not found

  /api/customer/delete:
    delete:
      summary: Delete a customer by ID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Customer deleted
        '404':
          description: Customer not found

components:
  schemas:
    CustomerDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        fullName:
          type: string
          example: John
        email:
          type: string
          example: John@gmail.com
        status:
          type: string
          example: ACTIVE
        age:
          type: integer
          example: 27
        created:
          type: string
          format: date
          example: "2024-01-15"
        updated:
          type: string
          format: date
          example: "2024-01-15"
    CreateCustomerDto:
      type: object
      properties:
        fullName:
          type: string
          example: John
        email:
          type: string
          example: John@gmail.com
        status:
          type: string
          example: ACTIVE
        age:
          type: integer
          example: 27
    UpdateCustomerDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        fullName:
          type: string
          example: John
        email:
          type: string
          example: John@gmail.com
        status:
          type: string
          example: ACTIVE
        age:
          type: integer
          example: 27

